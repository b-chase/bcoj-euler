"""<p>Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:</p>
<table><tr><td>Triangle</td>
<td>�</td>
<td>$T_n=n(n+1)/2$</td>
<td>�</td>
<td>$1, 3, 6, 10, 15, \dots$</td>
</tr><tr><td>Pentagonal</td>
<td>�</td>
<td>$P_n=n(3n - 1)/2$</td>
<td>�</td>
<td>$1, 5, 12, 22, 35, \dots$</td>
</tr><tr><td>Hexagonal</td>
<td>�</td>
<td>$H_n=n(2n - 1)$</td>
<td>�</td>
<td>$1, 6, 15, 28, 45, \dots$</td>
</tr></table><p>It can be verified that $T_{285} = P_{165} = H_{143} = 40755$.</p>
<p>Find the next triangle number that is also pentagonal and hexagonal.</p>

"""

import euler_math as em

def solve(debug=False):
    # T_n = 1, 3, 6, 10, 15 ...   +2, +3, +4, ...    (1 + k)
    # P_n = 1, 5, 12, 22, 35 ...   +4, +7, +10 ...   (4 + 3k)
    # H_n = 1, 6, 15, 28, 45 ...   +5, +9, +13 ...   (5 + 4k)

    def tri_gen():
        n, tn = 1, 1
        while True:
            yield tn
            n += 1
            tn += n
    
    def pent_gen():
        n, pn = 1, 1
        while True:
            yield pn
            pn += 4 + 3*(n-1)
            n += 1
            
        
    def hex_gen():
        n, hn = 1, 1
        while True:
            yield hn
            hn += 5 + 4*(n-1)
            n += 1
            
    tng = tri_gen()
    png = pent_gen()
    hng = hex_gen()

    res = None

    p, h = 0, 0
    for t in tng:
        while p < t:
            p = png.__next__()
            if debug:
                print(t, p)

        if t == p:
            while h < t:
                h = hng.__next__()
                if debug:
                    print(t, p, h)

        if t > 40755 and h == p == t:
            res = t
            break

    
    print(f"*** Answer: {res} ***")