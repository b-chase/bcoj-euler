"""<p>The sequence of triangle numbers is generated by adding the natural numbers. 
So the $7$<sup>th</sup> triangle number would be $1 + 2 + 3 + 4 + 5 + 6 + 7 = 28$. 

The first ten terms would be:
$$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \dots$$</p>

<p>Let us list the factors of the first seven triangle numbers:</p>
\begin{align}
\mathbf 1 &amp;\colon 1\\
\mathbf 3 &amp;\colon 1,3\\
\mathbf 6 &amp;\colon 1,2,3,6\\
\mathbf{10} &amp;\colon 1,2,5,10\\
\mathbf{15} &amp;\colon 1,3,5,15\\
\mathbf{21} &amp;\colon 1,3,7,21\\
\mathbf{28} &amp;\colon 1,2,4,7,14,28
\end{align}

<p>We can see that $28$ is the first triangle number to have over five divisors.</p>
<p>What is the value of the first triangle number to have over five hundred divisors?</p>
"""

import euler_math as em

def solve(debug=False):
    min_div = 501
    
    
    step = 0
    n = 0
    
    max_div_ct = 0
    
    while n < 1e9:
        step += 1
        n += step
        
        div_ct = len(em.divisors_of_n(n))
        if div_ct >= min_div:
            print(n)
            return

        if debug:
            max_div_ct = max(div_ct, max_div_ct)
            if n % 1000 == 0:
                print(f"Failed for n<={n} (max div ct = {max_div_ct})")
        
    print("Couldn't find answer")

            
        
        
    
    print(em.divisors_of_n(28))
    
    pass